{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"./Icon\";\nimport styles, { DISLIKE_ACTIONS, FLASH_ACTIONS, LIKE_ACTIONS, STAR_ACTIONS, WHITE } from \"../assets/styles\";\n\nvar CardItem = function CardItem(_ref) {\n  var description = _ref.description,\n      hasActions = _ref.hasActions,\n      hasVariant = _ref.hasVariant,\n      image = _ref.image,\n      isOnline = _ref.isOnline,\n      matches = _ref.matches,\n      name = _ref.name;\n  var fullWidth = Dimensions.get(\"window\").width;\n  var imageStyle = [{\n    borderRadius: 8,\n    width: hasVariant ? fullWidth / 2 - 30 : fullWidth - 80,\n    height: hasVariant ? 170 : 350,\n    margin: hasVariant ? 0 : 20\n  }];\n  var nameStyle = [{\n    paddingTop: hasVariant ? 10 : 15,\n    paddingBottom: hasVariant ? 5 : 7,\n    color: \"#363636\",\n    fontSize: hasVariant ? 15 : 30\n  }];\n  return React.createElement(View, {\n    style: styles.containerCardItem\n  }, React.createElement(Image, {\n    source: image,\n    style: imageStyle\n  }), matches && React.createElement(View, {\n    style: styles.matchesCardItem\n  }, React.createElement(Text, {\n    style: styles.matchesTextCardItem\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    color: WHITE,\n    size: 13\n  }), \" \", matches, \"% Match!\")), React.createElement(Text, {\n    style: nameStyle\n  }, name), description && React.createElement(Text, {\n    style: styles.descriptionCardItem\n  }, description), !description && React.createElement(View, {\n    style: styles.status\n  }, React.createElement(View, {\n    style: isOnline ? styles.online : styles.offline\n  }), React.createElement(Text, {\n    style: styles.statusText\n  }, isOnline ? \"Online\" : \"Offline\")), hasActions && React.createElement(View, {\n    style: styles.actionsCardItem\n  }, React.createElement(TouchableOpacity, {\n    style: styles.miniButton\n  }, React.createElement(Icon, {\n    name: \"star\",\n    color: STAR_ACTIONS,\n    size: 14\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(Icon, {\n    name: \"heart\",\n    color: LIKE_ACTIONS,\n    size: 25\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(Icon, {\n    name: \"close\",\n    color: DISLIKE_ACTIONS,\n    size: 25\n  })), React.createElement(TouchableOpacity, {\n    style: styles.miniButton\n  }, React.createElement(Icon, {\n    name: \"flash\",\n    color: FLASH_ACTIONS,\n    size: 14\n  }))));\n};\n\nexport default CardItem;","map":{"version":3,"sources":["/Users/rvdubinskiy/PET/tinder-expo/components/CardItem.tsx"],"names":["React","Icon","styles","DISLIKE_ACTIONS","FLASH_ACTIONS","LIKE_ACTIONS","STAR_ACTIONS","WHITE","CardItem","description","hasActions","hasVariant","image","isOnline","matches","name","fullWidth","Dimensions","get","width","imageStyle","borderRadius","height","margin","nameStyle","paddingTop","paddingBottom","color","fontSize","containerCardItem","matchesCardItem","matchesTextCardItem","descriptionCardItem","status","online","offline","statusText","actionsCardItem","miniButton","button"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, View, Image, Dimensions, TouchableOpacity } from \"react-native\";\nimport Icon from \"./Icon\";\nimport { CardItemT } from \"../types\";\nimport styles, {\n  DISLIKE_ACTIONS,\n  FLASH_ACTIONS,\n  LIKE_ACTIONS,\n  STAR_ACTIONS,\n  WHITE,\n} from \"../assets/styles\";\n\nconst CardItem = ({\n  description,\n  hasActions,\n  hasVariant,\n  image,\n  isOnline,\n  matches,\n  name,\n}: CardItemT) => {\n  // Custom styling\n  const fullWidth = Dimensions.get(\"window\").width;\n\n  const imageStyle = [\n    {\n      borderRadius: 8,\n      width: hasVariant ? fullWidth / 2 - 30 : fullWidth - 80,\n      height: hasVariant ? 170 : 350,\n      margin: hasVariant ? 0 : 20,\n    },\n  ];\n\n  const nameStyle = [\n    {\n      paddingTop: hasVariant ? 10 : 15,\n      paddingBottom: hasVariant ? 5 : 7,\n      color: \"#363636\",\n      fontSize: hasVariant ? 15 : 30,\n    },\n  ];\n\n  return (\n    <View style={styles.containerCardItem}>\n      {/* IMAGE */}\n      <Image source={image} style={imageStyle} />\n\n      {/* MATCHES */}\n      {matches && (\n        <View style={styles.matchesCardItem}>\n          <Text style={styles.matchesTextCardItem}>\n            <Icon name=\"heart\" color={WHITE} size={13} /> {matches}% Match!\n          </Text>\n        </View>\n      )}\n\n      {/* NAME */}\n      <Text style={nameStyle}>{name}</Text>\n\n      {/* DESCRIPTION */}\n      {description && (\n        <Text style={styles.descriptionCardItem}>{description}</Text>\n      )}\n\n      {/* STATUS */}\n      {!description && (\n        <View style={styles.status}>\n          <View style={isOnline ? styles.online : styles.offline} />\n          <Text style={styles.statusText}>\n            {isOnline ? \"Online\" : \"Offline\"}\n          </Text>\n        </View>\n      )}\n\n      {/* ACTIONS */}\n      {hasActions && (\n        <View style={styles.actionsCardItem}>\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon name=\"star\" color={STAR_ACTIONS} size={14} />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            <Icon name=\"heart\" color={LIKE_ACTIONS} size={25} />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.button}>\n            <Icon name=\"close\" color={DISLIKE_ACTIONS} size={25} />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.miniButton}>\n            <Icon name=\"flash\" color={FLASH_ACTIONS} size={14} />\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default CardItem;\n"]},"metadata":{},"sourceType":"module"}