{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Home, Matches, Messages, Profile } from \"./screens\";\nimport { PRIMARY_COLOR, DARK_GRAY, BLACK, WHITE } from \"./assets/styles\";\nimport TabBarIcon from \"./components/TabBarIcon\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function App() {\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Tab\",\n    options: {\n      headerShown: false,\n      animationEnabled: false\n    }\n  }, function () {\n    return React.createElement(Tab.Navigator, {\n      tabBarOptions: {\n        showLabel: false,\n        activeTintColor: PRIMARY_COLOR,\n        inactiveTintColor: DARK_GRAY,\n        labelStyle: {\n          fontSize: 14,\n          textTransform: \"uppercase\",\n          paddingTop: 10\n        },\n        style: {\n          backgroundColor: WHITE,\n          borderTopWidth: 0,\n          marginBottom: 0,\n          shadowOpacity: 0.05,\n          shadowRadius: 10,\n          shadowColor: BLACK,\n          shadowOffset: {\n            height: 0,\n            width: 0\n          }\n        }\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Explore\",\n      component: Home,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return React.createElement(TabBarIcon, {\n            focused: focused,\n            iconName: \"search\",\n            text: \"Explore\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"Matches\",\n      component: Matches,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return React.createElement(TabBarIcon, {\n            focused: focused,\n            iconName: \"heart\",\n            text: \"Matches\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"Chat\",\n      component: Messages,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return React.createElement(TabBarIcon, {\n            focused: focused,\n            iconName: \"chatbubble\",\n            text: \"Chat\"\n          });\n        }\n      }\n    }), React.createElement(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return React.createElement(TabBarIcon, {\n            focused: focused,\n            iconName: \"person\",\n            text: \"Profile\"\n          });\n        }\n      }\n    }));\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/rvdubinskiy/PET/tinder-expo/App.tsx"],"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","Home","Matches","Messages","Profile","PRIMARY_COLOR","DARK_GRAY","BLACK","WHITE","TabBarIcon","Stack","Tab","App","headerShown","animationEnabled","showLabel","activeTintColor","inactiveTintColor","labelStyle","fontSize","textTransform","paddingTop","style","backgroundColor","borderTopWidth","marginBottom","shadowOpacity","shadowRadius","shadowColor","shadowOffset","height","width","tabBarIcon","focused"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Home, Matches, Messages, Profile } from \"./screens\";\nimport { PRIMARY_COLOR, DARK_GRAY, BLACK, WHITE } from \"./assets/styles\";\nimport TabBarIcon from \"./components/TabBarIcon\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst App = () => (\n  <NavigationContainer>\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Tab\"\n        options={{ headerShown: false, animationEnabled: false }}\n      >\n        {() => (\n          <Tab.Navigator\n            tabBarOptions={{\n              showLabel: false,\n              activeTintColor: PRIMARY_COLOR,\n              inactiveTintColor: DARK_GRAY,\n              labelStyle: {\n                fontSize: 14,\n                textTransform: \"uppercase\",\n                paddingTop: 10,\n              },\n              style: {\n                backgroundColor: WHITE,\n                borderTopWidth: 0,\n                marginBottom: 0,\n                shadowOpacity: 0.05,\n                shadowRadius: 10,\n                shadowColor: BLACK,\n                shadowOffset: { height: 0, width: 0 },\n              },\n            }}\n          >\n            <Tab.Screen\n              name=\"Explore\"\n              component={Home}\n              options={{\n                tabBarIcon: ({ focused }) => (\n                  <TabBarIcon\n                    focused={focused}\n                    iconName=\"search\"\n                    text=\"Explore\"\n                  />\n                ),\n              }}\n            />\n\n            <Tab.Screen\n              name=\"Matches\"\n              component={Matches}\n              options={{\n                tabBarIcon: ({ focused }) => (\n                  <TabBarIcon\n                    focused={focused}\n                    iconName=\"heart\"\n                    text=\"Matches\"\n                  />\n                ),\n              }}\n            />\n\n            <Tab.Screen\n              name=\"Chat\"\n              component={Messages}\n              options={{\n                tabBarIcon: ({ focused }) => (\n                  <TabBarIcon\n                    focused={focused}\n                    iconName=\"chatbubble\"\n                    text=\"Chat\"\n                  />\n                ),\n              }}\n            />\n\n            <Tab.Screen\n              name=\"Profile\"\n              component={Profile}\n              options={{\n                tabBarIcon: ({ focused }) => (\n                  <TabBarIcon\n                    focused={focused}\n                    iconName=\"person\"\n                    text=\"Profile\"\n                  />\n                ),\n              }}\n            />\n          </Tab.Navigator>\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  </NavigationContainer>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}